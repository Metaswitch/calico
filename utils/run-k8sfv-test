#!/bin/bash -ex

# Run the 'k8sfv' test suite, a functional and scale test of Felix
# running with the Kubernetes datastore driver, driven by CRUD
# operations through the k8s API server.

# Config.
K8S_VERSION=1.5.3

# Generate a unique prefix for the names of the containers that we
# will create.
prefix=$(basename $(mktemp -t k8sfv-XXXX))

# Arrange to always clean up the containers that we create.
function cleanup {
    docker rm -f ${prefix}-felix || true
    docker rm -f ${prefix}-apiserver || true
    docker rm -f ${prefix}-etcd || true
    docker ps -a
}
trap cleanup EXIT SIGINT SIGQUIT

# Utility - get a container's IP address.
function get_container_ip {
    docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $1
}

# Just in case containers already exist with the same names, clean
# them up.
cleanup

# Run etcd.
docker run --detach --name ${prefix}-etcd \
       quay.io/coreos/etcd \
       etcd \
       --advertise-client-urls "http://127.0.0.1:2379,http://127.0.0.1:4001" \
       --listen-client-urls "http://0.0.0.0:2379,http://0.0.0.0:4001"
etcd_ip=$(get_container_ip ${prefix}-etcd)

# Run k8s API server.
docker run --detach --name ${prefix}-apiserver \
       gcr.io/google_containers/hyperkube-amd64:v${K8S_VERSION} \
       /hyperkube apiserver \
       --etcd-servers=http://${etcd_ip}:2379 \
       --service-cluster-ip-range=10.101.0.0/16 -v=10
k8s_ip=$(get_container_ip ${prefix}-apiserver)

# Run Felix.
docker run --detach --privileged --name ${prefix}-felix \
       -e FELIX_LOGSEVERITYSCREEN=info \
       -e FELIX_DATASTORETYPE=kubernetes \
       -e FELIX_PROMETHEUSMETRICSENABLED=true \
       -e FELIX_USAGEREPORTINGENABLED=false \
       -e FELIX_DEBUGMEMORYPROFILEPATH="heap-<timestamp>" \
       -e K8S_API_ENDPOINT=https://${k8s_ip}:6443 \
       -e K8S_INSECURE_SKIP_TLS_VERIFY=true \
       -v $${PWD}:/testcode \
       -w /testcode/k8sfv \
       calico/felix \
       /bin/sh -c "for n in 1 2; do calico-felix; done"
felix_ip=$(get_container_ip ${prefix}-felix)

# Run the test suite.
docker exec ${prefix}-felix /bin/sh -c \
       "cd /testcode/k8sfv && /testcode/k8sfv/k8sfv.test -ginkgo.v https://${k8s_ip}:6443 ${felix_ip}"
